<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.weibo.dashboard.dao.PostMapper">
	<resultMap id="postMap" type="com.weibo.dashboard.entity.Post">
		<id property="id" column="id" javaType="int"/>
		<result property="date" column="date" javaType="Date"/>
		<result property="authorName" column="author_name" javaType="String"/>
		<result property="content" column="content" javaType="String"/>
		<result property="likes" column="likes" javaType="int"/>
		<result property="disLikes" column="dis_likes" javaType="int"/>
		<collection property="commentList" column="commentList" ofType="com.weibo.dashboard.entity.Comment">
			<result property="cDate" column="c_date" javaType="Date"/>
			<result property="cContent" column="c_content" javaType="String"/>
			<result property="cAuthorName" column="c_author_name" javaType="String"/>
		</collection>
	</resultMap>
	<select id="findList" resultMap="postMap">
		select * from posts left outer join comments on post_id = posts.id order by posts.date desc
	</select>
	<select id="postByUser" resultMap="postMap">
		select * from posts,comments where post_id = posts.id and posts.author_name = #{userName} order by posts.date desc
	</select>
	<insert id="insert" parameterType="com.weibo.dashboard.entity.Post" useGeneratedKeys="true" keyProperty="id">
		insert into posts
		(date,author_name,content)values
		(now(),#{authorName},#{content})
	</insert>
	<delete id="delete">
		delete from posts where id=#{id}
	</delete>
	<update id="like">
		update posts set likes=IF(likes IS NULL, 1,likes+1)
		where id=#{id}
	</update>
	<update id="disLike">
		update posts set dis_likes=IF(dis_likes IS NULL, 1,dis_likes+1) where id=#{id}
	</update>
</mapper>